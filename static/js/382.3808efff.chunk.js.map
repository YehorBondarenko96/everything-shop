{"version":3,"file":"static/js/382.3808efff.chunk.js","mappings":"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","sources":["components/Card/Card.styled.jsx","components/Card/Card.jsx","components/UlChairsPhoto/UlChairsPhoto.styled.jsx","components/LiChairsPhoto/LiChairsPhoto.styled.jsx","components/LiChairsPhoto/LiChairsPhoto.jsx","components/UlChairsPhoto/UlChairsPhoto.jsx","pages/ChairCard/ChairCard.styled.jsx","pages/ChairCard/ChairCard.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  overflow-y: auto;\n  z-index: 2;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 40px 20px;\n  border-radius: 10px;\n  background-color: #fff;\n  position: relative;\n`;","import {\n  Backdrop,\n  Container\n} from \"./Card.styled\";\nimport { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const Card = ({ children }) => { \n  const realScreenWidth = useSelector(selectScreenWidth);\n  const navigate = useNavigate();\n\n  const backdropChairRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (backdropChairRef.current && containerRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n    \n      const backdropChair = backdropChairRef.current;\n      const container = containerRef.current;\n\n      container.style.padding = `${screenWidth / (coef * 21)}px ${screenWidth / (coef * 10)}px`;\n      \n\n    const handelClickBackdrop = (e) => {\n        if (e.target.classList.contains('backdropChair')) {\n            closeModal();\n        }\n    };\n\n      const closeModal = () => { \n        window.removeEventListener('keydown', onEscPress);\n        backdropChair.removeEventListener('click', handelClickBackdrop);\n        navigate('/');\n    };\n\n    const onEscPress = e => {\n      if (e.code === 'Escape') {\n        closeModal()\n      };\n    };\n\n      window.addEventListener('keydown', onEscPress);\n      \n      backdropChair.addEventListener('click', handelClickBackdrop);\n\n      return () => {\n        window.removeEventListener('keydown', onEscPress);\n      };\n        }\n  }, [navigate, realScreenWidth]);\n\n  return (\n    <Backdrop ref={backdropChairRef} className=\"backdropChair\">\n      <Container ref={containerRef}>\n        {children}\n      </Container>\n    </Backdrop>\n  )\n};","import styled from \"styled-components\";\n\nexport const AllDiv = styled.div`\nheight: 100%;\noverflow-y: auto;\n`;\n\nexport const Ul = styled.ul`\ndisplay: flex;\nflex-direction: column;\n`;","import styled from \"styled-components\";\n\nexport const Li = styled.li`\noverflow: hidden;\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\nheight: 100%;\npadding: 0;\nmargin: 0;\nborder: 0;\n`;\n\nexport const Img = styled.img`\nwidth: 100%;\nheight: 100%;\nobject-fit: cover;\n`;","import {\n  Li,\n  Button,\n  Img\n} from \"./LiChairsPhoto.styled\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const LiChairsPhoto = ({ photo, alt }) => {\n  const realScreenWidth = useSelector(selectScreenWidth);\n\n  const buttonRef = useRef(null);\n  const liRef = useRef(null);\n\n  useEffect(() => {\n    if (liRef.current && buttonRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n\n      const li = liRef.current;\n\n      li.style.width = screenWidth / (coef * 7) + 'px';\n      li.style.height = screenWidth / (coef * 7) + 'px';\n      li.style.borderRadius = screenWidth / (coef * 70) + 'px';\n    }\n  }, [realScreenWidth]);\n\n  return (\n    <Li ref={liRef}>\n      <Button ref={buttonRef}>\n        <Img src={photo} alt={alt} />\n      </Button>\n    </Li>\n  )\n};","import {\n  AllDiv,\n  Ul\n} from \"./UlChairsPhoto.styled\";\nimport { LiChairsPhoto } from \"../LiChairsPhoto/LiChairsPhoto\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const UlChairsPhoto = ({ photos, title }) => {\n  const realScreenWidth = useSelector(selectScreenWidth);\n\n\n  const ulRef = useRef(null);\n\n  useEffect(() => {\n    if (ulRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n\n      const ul = ulRef.current;\n\n      ul.style.gap = screenWidth / (coef * 50) + 'px';\n    }\n  }, [realScreenWidth]);\n\n  return (\n    <AllDiv>\n      <Ul ref={ulRef}>\n      {photos &&\n        photos.map(photo => <LiChairsPhoto key={photo} photo={photo} alt={title} />)\n      }\n    </Ul>\n    </AllDiv>\n  )\n};","import styled from \"styled-components\";\n\nexport const DivImages = styled.div`\ndisplay: flex;\n`;\n\nexport const DivListImages = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nheight: 100%;\n`;\n\nexport const Button = styled.button`\nbackground-color: transparent;\n`;\n\nexport const IconButton = styled.svg`\n  width: ${(props) => props.size || '12px'};\n  height: ${(props) => props.size || '12px'};\n  fill: ${(props) => props.color || '#000'};\n  display: inline-block;\n`;\n\nexport const BigImg = styled.img`\nheight: 100%;\nobject-fit: cover;\n`;\n\nexport const DivText = styled.div`\nbackground-color: #f6f6f6;\n`;\n\nexport const TitleChair = styled.h1`\nfont-weight: 400;\n`;","import { Card } from \"../../components/Card/Card\";\nimport { useSelector } from \"react-redux\";\nimport { selectItems, selectScreenWidth } from \"../../redux/selectors\";\nimport { useParams } from \"react-router-dom\";\nimport { UlChairsPhoto } from \"../../components/UlChairsPhoto/UlChairsPhoto\";\nimport {\n  DivImages,\n  DivListImages,\n  Button,\n  IconButton,\n  BigImg,\n  DivText,\n  TitleChair\n} from \"./ChairCard.styled\";\nimport { useEffect, useRef } from \"react\";\nimport sprite from '../../assets/sprite.svg';\n\nconst ChairCard = () => { \n  const {id} = useParams();\n  const chair = useSelector(selectItems).find(item => item.id === id);\n  const realScreenWidth = useSelector(selectScreenWidth);\n\n\n  const divImagesRef = useRef(null);\n  const divTextRef = useRef(null);\n  const titleChairRef = useRef(null);\n\n  useEffect(() => {\n    if (divImagesRef.current && divTextRef.current && titleChairRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n\n      const divImages = divImagesRef.current;\n      const divText = divTextRef.current;\n      const titleChair = titleChairRef.current;\n\n      divImages.style.height = screenWidth / (coef * 1.5) + 'px';\n      divImages.style.gap = screenWidth / (coef * 15) + 'px';\n      titleChair.style.fontSize = screenWidth / (coef * 30) + 'px';\n      divText.style.padding = `${screenWidth / (coef * 15)}px ${screenWidth / (coef * 21)}px`;\n    }\n  }, [realScreenWidth]);\n\n  return (\n    <Card>\n      {chair &&\n        <>\n        <DivImages ref={divImagesRef}>\n          <DivListImages>\n            <Button>\n            <IconButton>\n            <use href={`${sprite}#arrow-up`} />\n            </IconButton>\n          </Button>\n          <UlChairsPhoto photos={chair.images} title={chair.title} />\n          <Button>\n            <IconButton>\n            <use href={`${sprite}#arrow-down`} />\n            </IconButton>\n          </Button>\n          </DivListImages>\n          <BigImg src={ chair.titleImage } alt={chair.title} />\n        </DivImages>\n        <DivText ref={divTextRef}>\n          <TitleChair ref={titleChairRef}>{ chair.title }</TitleChair>\n        </DivText>\n        </>\n      }\n    </Card>\n  )\n};\n\nexport default ChairCard;"],"names":["Backdrop","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Card","_ref","children","realScreenWidth","useSelector","selectScreenWidth","navigate","useNavigate","backdropChairRef","useRef","containerRef","useEffect","current","screenWidth","coef","backdropChair","style","padding","concat","handelClickBackdrop","e","target","classList","contains","closeModal","window","removeEventListener","onEscPress","code","addEventListener","_jsx","ref","className","AllDiv","Ul","Li","Button","Img","_templateObject3","LiChairsPhoto","photo","alt","buttonRef","liRef","li","width","height","borderRadius","src","UlChairsPhoto","photos","title","ulRef","gap","map","DivImages","DivListImages","IconButton","_templateObject4","props","size","color","BigImg","_templateObject5","DivText","_templateObject6","TitleChair","_templateObject7","ChairCard","id","useParams","chair","selectItems","find","item","divImagesRef","divTextRef","titleChairRef","divImages","divText","titleChair","fontSize","_jsxs","_Fragment","href","sprite","images","titleImage"],"sourceRoot":""}