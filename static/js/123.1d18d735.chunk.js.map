{"version":3,"file":"static/js/123.1d18d735.chunk.js","mappings":"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","sources":["components/Card/Card.styled.jsx","components/Card/Card.jsx","components/UlChairsPhoto/UlChairsPhoto.styled.jsx","components/LiChairsPhoto/LiChairsPhoto.styled.jsx","components/LiChairsPhoto/LiChairsPhoto.jsx","components/UlChairsPhoto/UlChairsPhoto.jsx","pages/ChairCard/ChairCard.styled.jsx","components/UlColorsChair/UlColorsChair.styled.jsx","components/UlColorsChair/UlColorsChair.jsx","components/UlSizesChair/UlSizesChair.styled.jsx","components/LiSizesChair/LiSizesChair.styled.jsx","components/LiSizesChair/LiSizesChair.jsx","components/UlSizesChair/UlSizesChair.jsx","webpack://everything-shop/./src/components/QuantityInput/QuantityInput.module.css?e27f","components/QuantityInput/QuantityInput.jsx","pages/ChairCard/ChairCard.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  overflow-y: auto;\n  z-index: 2;\n  box-sizing: border-box;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  border-radius: 10px;\n  background-color: #fff;\n  height: 100%;\n  box-sizing: border-box;\n  position: relative;\n  overflow-y: auto;\n`;","import {\n  Backdrop,\n  Container\n} from \"./Card.styled\";\nimport { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const Card = ({ children }) => { \n  const realScreenWidth = useSelector(selectScreenWidth);\n  const navigate = useNavigate();\n\n  const backdropChairRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (backdropChairRef.current && containerRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n    \n      const backdropChair = backdropChairRef.current;\n      const container = containerRef.current;\n\n      container.style.padding = `${screenWidth / (coef * 21)}px ${screenWidth / (coef * 10)}px`;\n      container.style.height = `${screenWidth / (coef * 1.2)}px`;\n\n    const handelClickBackdrop = (e) => {\n        if (e.target.classList.contains('backdropChair')) {\n            closeModal();\n        }\n    };\n\n      const closeModal = () => { \n        window.removeEventListener('keydown', onEscPress);\n        backdropChair.removeEventListener('click', handelClickBackdrop);\n        navigate('/');\n    };\n\n    const onEscPress = e => {\n      if (e.code === 'Escape') {\n        closeModal()\n      };\n    };\n\n      window.addEventListener('keydown', onEscPress);\n      \n      backdropChair.addEventListener('click', handelClickBackdrop);\n\n      return () => {\n        window.removeEventListener('keydown', onEscPress);\n      };\n        }\n  }, [navigate, realScreenWidth]);\n\n  return (\n    <Backdrop ref={backdropChairRef} className=\"backdropChair\">\n        <Container ref={containerRef}>\n        {children}\n      </Container>\n    </Backdrop>\n  )\n};","import styled from \"styled-components\";\n\nexport const AllDiv = styled.div`\nheight: 100%;\noverflow-y: auto;\nscrollbar-width: none; \n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n  display: none;\n`;\n\nexport const Ul = styled.ul`\ndisplay: flex;\nflex-direction: column;\n`;","import styled from \"styled-components\";\n\nexport const Li = styled.li`\npadding: 1px;\nborder: 0.5px solid transparent;\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\nheight: 100%;\npadding: 0;\nmargin: 0;\nborder: 0;\noverflow: hidden;\n`;\n\nexport const Img = styled.img`\nwidth: 100%;\nheight: 100%;\nobject-fit: cover;\n`;","import {\n  Li,\n  Button,\n  Img\n} from \"./LiChairsPhoto.styled\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectScreenWidth, selectTitleImageChair } from \"../../redux/selectors\";\nimport { setTitleImage } from \"../../redux/slice\";\n\nexport const LiChairsPhoto = ({ id, photo, alt, ulPhotos, heightUlPhotos }) => {\n  const dispatch = useDispatch();\n  const realScreenWidth = useSelector(selectScreenWidth);\n  const titleImage = useSelector(selectTitleImageChair);\n\n  const buttonRef = useRef(null);\n  const liRef = useRef(null);\n\n  const handelClick = () => {\n    const selectedParams = {\n      id,\n      titleImage: photo\n    };\n    dispatch(setTitleImage(selectedParams));\n  };\n\n  useEffect(() => {\n    if (liRef.current && buttonRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n\n      const li = liRef.current;\n      const button = buttonRef.current;\n\n      li.style.width = screenWidth / (coef * 7) + 'px';\n      li.style.height = screenWidth / (coef * 7) + 'px';\n      li.style.borderRadius = screenWidth / (coef * 70) + 'px';\n      button.style.borderRadius = screenWidth / (coef * 70) + 'px';\n\n      if (titleImage === photo) {\n        if (ulPhotos && heightUlPhotos > 0) {\n          const ulTop = ulPhotos.getBoundingClientRect().top;\n          const liTop = li.getBoundingClientRect().top;\n          const liHeight = li.offsetHeight;\n          const scrollValue = ulPhotos.scrollTop - (heightUlPhotos / 2 - liHeight / 2 + (ulTop - liTop));\n          ulPhotos.style.scrollBehavior = 'smooth';\n          ulPhotos.scrollTop = scrollValue;\n        }\n      };\n    }\n  }, [realScreenWidth, photo, titleImage, ulPhotos, heightUlPhotos]);\n\n  return (\n    <Li\n      ref={liRef}\n      style={{ borderColor: titleImage === photo && '#a7a7a7' }}\n    >\n      <Button\n        ref={buttonRef}\n        type=\"button\"\n        onClick={handelClick}\n      >\n        <Img src={photo} alt={alt} />\n      </Button>\n    </Li>\n  )\n};","import {\n  AllDiv,\n  Ul\n} from \"./UlChairsPhoto.styled\";\nimport { LiChairsPhoto } from \"../LiChairsPhoto/LiChairsPhoto\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const UlChairsPhoto = ({ id, photos, title }) => {\n  const [heightAllDiv, setHeightAllDiv] = useState(0);\n  const realScreenWidth = useSelector(selectScreenWidth);\n\n  const allDivRef = useRef(null);\n  const ulRef = useRef(null);\n\n  useEffect(() => {\n    if (allDivRef.current && ulRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n\n      const allDiv = allDivRef.current;\n      const ul = ulRef.current;\n\n      ul.style.gap = screenWidth / (coef * 50) + 'px';\n      setTimeout(() => {\n        setHeightAllDiv(allDiv.offsetHeight);\n      }, 0);\n\n    }\n  }, [realScreenWidth]);\n\n  return (\n    <AllDiv ref={allDivRef}>\n      <Ul ref={ulRef} className=\"ulPhotos\">\n      {photos &&\n          photos.map(photo => <LiChairsPhoto\n            key={photo}\n            id={id}\n            photo={photo}\n            alt={title}\n            ulPhotos={allDivRef.current}\n            heightUlPhotos={heightAllDiv}\n          />)\n      }\n    </Ul>\n    </AllDiv>\n  )\n};","import styled from \"styled-components\";\n\nexport const DivImages = styled.div`\ndisplay: flex;\n`;\n\nexport const DivListImages = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nheight: 100%;\n`;\n\nexport const Button = styled.button`\nbackground-color: transparent;\n`;\n\nexport const IconButton = styled.svg`\n  width: ${(props) => props.size || '12px'};\n  height: ${(props) => props.size || '12px'};\n  fill: ${(props) => props.color || '#000'};\n  display: inline-block;\n`;\n\nexport const DivBigImg = styled.div`\nheight: 100%;\n`;\n\nexport const BigImg = styled.img`\nwidth: 100%;\nobject-fit: cover;\n`;\n\nexport const DivText = styled.div`\nbackground-color: #f6f6f6;\n  overflow-y: auto;\n  border-radius: 5px;\n`;\n\nexport const TitleChair = styled.h1`\nfont-weight: 400;\n`;\n\nexport const Price = styled.p`\nfont-weight: 700;\n`;\n\nexport const OldPrice = styled.span`\ntext-decoration: line-through;\n`;\n\nexport const PlainText = styled.p`\ncolor: #a7a7a7;\n`;\n\nexport const DivDescription = styled.div`\nborder-top: 1px solid #a7a7a7;\n`;\n\nexport const TitleDescription = styled.h3`\ncolor: #a7a7a7\n`;\n\nexport const DivOptions = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const DivQuantityShopButton = styled.div`\ndisplay: flex;\ngap: 14px;\n\n@media(max-width: 700px){\n  gap: 10px;\n};\n`;\n\nexport const ShopButton = styled.button`\nwidth: 100%;\nborder: 0;\nbackground-color: #525252;\ncolor: #ffffff;\ntransition: background-color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n&:hover{\n  background-color: #393939;\n}\n`;","import styled from \"styled-components\";\n\nexport const AllDiv = styled.div``;\n\nexport const TitleColors = styled.p``;\n\nexport const Ul = styled.ul`\ndisplay: flex;\ngap: 14px;\n\n@media(max-width: 700px){\n  gap: 10px;\n}\n`;\n\nexport const Li = styled.li`\nwidth: 18px;\nheight: 18px;\npadding: 1px;\nborder: 0.5px solid transparent;\n\n@media(max-width: 700px){\n  width: 12px;\n  height: 12px;\n}\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\nheight: 100%;\n`;","import {\n  AllDiv,\n  TitleColors,\n  Ul,\n  Li,\n  Button\n} from \"./UlColorsChair.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectColorChair } from \"../../redux/selectors\";\nimport { setColor } from \"../../redux/slice\";\n\nexport const UlColorsChair = ({ id }) => {\n  const dispatch = useDispatch();\n  const color = useSelector(selectColorChair);\n\n  const handelClick = (e) => {\n    const idButton = e.currentTarget.id;\n    const selectedParams = {\n      id,\n      color: idButton\n    };\n    dispatch(setColor(selectedParams));\n  };\n\n  return (\n    <AllDiv>\n      <TitleColors>Color: {color}</TitleColors>\n      <Ul>\n        <Li style={{borderColor: color === \"white\" && \"#000000\"}}>\n          <Button\n        type=\"button\" \n        id=\"white\" \n        style={{ backgroundColor: \"#ffffff\" }}\n        onClick={handelClick}\n        /></Li>\n        <Li style={{borderColor: color === \"yellow\" && \"#000000\"}}>\n          <Button\n        type=\"button\" \n        id=\"yellow\" \n        style={{ backgroundColor: \"#ffff00\"}}\n        onClick={handelClick}\n        /></Li>\n        <Li style={{borderColor: color === \"green\" && \"#000000\"}}>\n          <Button\n        type=\"button\" \n        id=\"green\" \n        style={{ backgroundColor: \"#596B46\"}}\n        onClick={handelClick}\n        /></Li>\n        <Li style={{borderColor: color === \"gray\" && \"#000000\"}}>\n          <Button\n        type=\"button\" \n        id=\"gray\" \n        style={{ backgroundColor: \"#767676\"}}\n        onClick={handelClick}\n        /></Li>\n      </Ul>\n    </AllDiv>\n  )\n};","import styled from \"styled-components\";\n\nexport const AllDiv = styled.div``;\n\nexport const TitleSizes = styled.p``;\n\nexport const Ul = styled.ul`\ndisplay: flex;\ngap: 14px;\n\n@media(max-width: 700px){\n  gap: 10px;\n};\n`;","import styled from \"styled-components\";\n\nexport const Li = styled.li`\nwidth: calc((100% - 14px)/2);\npadding: 1px;\nborder: 0.5px solid #a7a7a7;\nborder-radius: 2px;\nbackground-color: #ffffff;\n\n@media(max-width: 700px){\nwidth: calc((100% - 10px)/2);\n};\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\nheight: 100%;\nbackground-color: transparent;\n`;","import {\n  Li,\n  Button\n} from \"./LiSizesChair.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectSizeChair, selectScreenWidth } from \"../../redux/selectors\";\nimport { setSelectedSize } from \"../../redux/slice\";\nimport { useEffect, useRef } from \"react\";\n\nexport const LiSizesChair = ({ size, id }) => { \n  const dispatch = useDispatch();\n  const realScreenWidth = useSelector(selectScreenWidth);\n  const selectedSize = useSelector(selectSizeChair).selectedSize;\n\n  const liRef = useRef(null);\n\n  const handelClick = (e) => { \n    const valueBntton = e.currentTarget.textContent;\n    const selectedParams = {\n      id,\n      size: valueBntton\n    };\n    dispatch(setSelectedSize(selectedParams));\n  };\n\n  useEffect(() => {\n    if (liRef.current) { \n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n\n      const li = liRef.current;\n\n      li.style.height = screenWidth / (coef * 27.78) + 'px';\n      // li.style.width = screenWidth / (coef * 3.125) + 'px';\n    };\n  }, [realScreenWidth]);\n\n  return (\n    <Li ref={liRef}  style={{borderColor: selectedSize === size && \"#000000\"}}>\n      <Button\n        type=\"button\"\n        onClick={handelClick}\n      >\n        {size}\n      </Button>\n    </Li>\n  )\n};","import { useSelector } from \"react-redux\";\nimport {\n  AllDiv,\n  TitleSizes,\n  Ul\n} from \"./UlSizesChair.styled\";\nimport { selectSizeChair } from \"../../redux/selectors\";\nimport { LiSizesChair } from \"components/LiSizesChair/LiSizesChair\";\n\nexport const UlSizesChair = ({id}) => { \n  const sizes = useSelector(selectSizeChair).sizes;\n  return (\n    <AllDiv>\n      <TitleSizes>Size</TitleSizes>\n      <Ul>\n      {sizes.map((size, index) => <LiSizesChair key={index} size={size} id={id} />)}\n    </Ul>\n    </AllDiv>\n  )\n};","// extracted by mini-css-extract-plugin\nexport default {\"divInput\":\"QuantityInput_divInput__BlgNC\",\"inputSavDr\":\"QuantityInput_inputSavDr__hsrJ8\",\"minBut\":\"QuantityInput_minBut__719N3\",\"plusBut\":\"QuantityInput_plusBut__mVEnV\"};","import css from './QuantityInput.module.css';\nimport { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectScreenWidth } from '../../redux/selectors';\n\nexport const QuantityInput = ({quantity, setQuantity}) => { \n  const realScreenWidth = useSelector(selectScreenWidth);\n\n  const inputSavDrRef = useRef(null);\n  const plusButRef = useRef(null); \n  const minButRef = useRef(null);\n\n  const updateValueInp = (evt) => {\n        evt.preventDefault();\n        const inpValue = evt.target.value;\n        setQuantity(inpValue);\n    };\n\n    const forPlus = () => {\n        const newValP = Number(quantity) + 1;\n        if (newValP > 0) {\n            setQuantity(newValP);\n        } else{\n            setQuantity(1);\n        };\n    };\n\n    const forMin = () => {\n        const newValM = Number(quantity) - 1;\n        if (newValM > 0) {\n            setQuantity(newValM);\n        } else{\n            setQuantity(1);\n        };\n    };\n\n  useEffect(() => {\n    if (inputSavDrRef.current && plusButRef.current && minButRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 3;\n      \n      const inputSavDr = inputSavDrRef.current;\n      const plusBut = plusButRef.current;\n      const minBut = minButRef.current;\n\n      inputSavDr.style.width = screenWidth > 450 ? screenWidth / (coef * 12) + 'px' : screenWidth / (coef * 25) + 'px';\n      inputSavDr.style.height = screenWidth / (coef * 12) - 2 + 'px';\n      inputSavDr.style.borderRadius = screenWidth / (coef * 100) + 'px';\n      inputSavDr.style.fontSize = screenWidth / (coef * 30) + 'px';\n      plusBut.style.height = screenWidth / (coef * 12) + 'px';\n      minBut.style.height = screenWidth / (coef * 12) + 'px';\n      plusBut.style.width =screenWidth / (coef * 25) + 'px';\n      minBut.style.width = screenWidth / (coef * 25) + 'px';\n      plusBut.style.fontSize = screenWidth / (coef * 20) + 'px';\n      minBut.style.fontSize = screenWidth / (coef * 20) + 'px';\n      plusBut.style.right = screenWidth > 900 ? screenWidth / (coef * 300) + 'px' : screenWidth / (coef * 150) + 'px';\n      minBut.style.left = screenWidth > 900 ? screenWidth / (coef * 300) + 'px' : screenWidth / (coef * 150) + 'px';\n    }\n  }, [realScreenWidth]);\n\n  return (\n    <div className={css.divInput}>\n        <button\n            type=\"button\"\n            ref={minButRef}\n            className={css.minBut}\n            onClick={forMin}\n        ></button>\n        <input\n            ref={inputSavDrRef}\n            className={css.inputSavDr}\n            name='quantity'\n            type=\"text\"\n            onInput={(e) => {\n                e.target.value = e.target.value.replace(/[^0-9]/g, '');\n            }}\n            value={quantity}\n            onChange={updateValueInp}\n        />\n        <button\n            type=\"button\"\n            ref={plusButRef}\n            className={css.plusBut}\n            onClick={forPlus}\n        ></button>\n    </div>\n  )\n};","import { Card } from \"../../components/Card/Card\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setOrderItems } from \"../../redux/slice\";\nimport { selectItems, selectScreenWidth } from \"../../redux/selectors\";\nimport { useParams } from \"react-router-dom\";\nimport { UlChairsPhoto } from \"../../components/UlChairsPhoto/UlChairsPhoto\";\nimport {\n  DivImages, DivListImages, Button, IconButton, DivBigImg, BigImg, DivText, TitleChair,\n  Price, OldPrice, PlainText, DivDescription, TitleDescription, DivOptions, DivQuantityShopButton,\n  ShopButton\n} from \"./ChairCard.styled\";\nimport { useState, useEffect, useRef } from \"react\";\nimport sprite from '../../assets/sprite.svg';\nimport { UlColorsChair } from \"components/UlColorsChair/UlColorsChair\";\nimport { UlSizesChair } from \"components/UlSizesChair/UlSizesChair\";\nimport { QuantityInput } from \"components/QuantityInput/QuantityInput\";\n\nconst ChairCard = () => { \n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const [quantity, setQuantity] = useState(1);\n  const chair = useSelector(selectItems).find(item => item.id === id);\n  const realScreenWidth = useSelector(selectScreenWidth);\n\n\n  const divImagesRef = useRef(null);\n  const divBigImgRef = useRef(null);\n  const divTextRef = useRef(null);\n  const titleChairRef = useRef(null);\n  const priceRef = useRef(null);\n  const titleDescriptionRef = useRef(null);\n  const divOptionsRef = useRef(null);\n  const shopButtonRef = useRef(null);\n\n  const handelClick = () => { \n    const dataForOrder = {\n      id,\n      price: chair.newPrice ? chair.newPrice : chair.price,\n      title: chair.title,\n      color: chair.color,\n      size: chair.size.selectedSize,\n      quantity\n    };\n    dispatch(setOrderItems(dataForOrder));\n  };\n\n  useEffect(() => {\n    if (divImagesRef.current && divTextRef.current && titleChairRef.current && priceRef.current\n      && titleDescriptionRef.current && divBigImgRef.current && divOptionsRef.current\n      && shopButtonRef.current) {\n      const screenWidth = realScreenWidth > 1000 ? 1000 : realScreenWidth;\n      const coef = 2;\n\n      const divImages = divImagesRef.current;\n      const divBigImg = divBigImgRef.current;\n      const divText = divTextRef.current;\n      const titleChair = titleChairRef.current;\n      const price = priceRef.current;\n      const titleDescription = titleDescriptionRef.current;\n      const divOptions = divOptionsRef.current;\n      const shopButton = shopButtonRef.current;\n\n      divImages.style.height = screenWidth / (coef * 1.5) + 'px';\n      divImages.style.gap = screenWidth / (coef * 15) + 'px';\n      titleChair.style.fontSize = screenWidth / (coef * 30) + 'px';\n      divText.style.padding = `${screenWidth / (coef * 15)}px ${screenWidth / (coef * 21)}px`;\n      divText.style.fontSize = screenWidth / (coef * 42) + 'px';\n      price.style.fontSize = screenWidth / (coef * 35) + 'px';\n      titleDescription.style.marginTop = screenWidth / (coef * 71.8) + 'px';\n      divBigImg.style.width = screenWidth / (coef * 1.5) + 'px';\n      divOptions.style.marginBottom = screenWidth / (coef * 42) + 'px';\n      divOptions.style.gap = screenWidth / (coef * 42) + 'px';\n      divOptions.style.width = screenWidth / (coef * 1.4) + 'px';\n      shopButton.style.height = screenWidth / (coef * 18) - 1 + 'px';\n      shopButton.style.borderRadius = screenWidth / (coef * 150) + 'px';\n      shopButton.style.fontSize = screenWidth / (coef * 40) + 'px';\n    }\n  }, [realScreenWidth]);\n\n  return (\n    <Card>\n      {chair &&\n        <>\n        <DivImages ref={divImagesRef}>\n          <DivListImages>\n            <Button>\n            <IconButton>\n            <use href={`${sprite}#arrow-up`} />\n            </IconButton>\n          </Button>\n          <UlChairsPhoto id={id} photos={chair[chair.color].images} title={chair.title.toLowerCase()} />\n          <Button>\n            <IconButton>\n            <use href={`${sprite}#arrow-down`} />\n            </IconButton>\n          </Button>\n          </DivListImages>\n          <DivBigImg ref={divBigImgRef}>\n            <BigImg src={ chair[chair.color].titleImage } alt={chair.title.toLowerCase()} />\n          </DivBigImg>\n        </DivImages>\n        <DivText ref={divTextRef}>\n          <TitleChair ref={titleChairRef}>{chair.title}</TitleChair>\n          <Price ref={priceRef}><OldPrice>{`${chair.price} UAH`}</OldPrice> {`${chair.newPrice} UAH`}</Price>\n          <PlainText>\n            {chair.smollDescription}\n          </PlainText>\n          <DivOptions ref={divOptionsRef}>\n            <UlColorsChair id={id} />\n            <UlSizesChair id={id} />\n            <DivQuantityShopButton>\n              <QuantityInput quantity={quantity} setQuantity={setQuantity}/>\n              <ShopButton\n                ref={shopButtonRef}\n                type=\"button\"\n                onClick={handelClick}\n              >\n                ORDER\n              </ShopButton>\n            </DivQuantityShopButton>\n          </DivOptions>\n          <DivDescription>\n            <TitleDescription ref={titleDescriptionRef}>DESCRIPTION</TitleDescription>\n            {chair.description.map((p, index) => <PlainText key={index}>{ p }</PlainText>)}\n          </DivDescription>\n        </DivText>\n        </>\n      }\n    </Card>\n  )\n};\n\nexport default ChairCard;"],"names":["Backdrop","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Card","_ref","children","realScreenWidth","useSelector","selectScreenWidth","navigate","useNavigate","backdropChairRef","useRef","containerRef","useEffect","current","screenWidth","coef","backdropChair","container","style","padding","concat","height","handelClickBackdrop","e","target","classList","contains","closeModal","window","removeEventListener","onEscPress","code","addEventListener","_jsx","ref","className","AllDiv","Ul","Li","Button","Img","_templateObject3","LiChairsPhoto","id","photo","alt","ulPhotos","heightUlPhotos","dispatch","useDispatch","titleImage","selectTitleImageChair","buttonRef","liRef","li","button","width","borderRadius","ulTop","getBoundingClientRect","top","liTop","liHeight","offsetHeight","scrollValue","scrollTop","scrollBehavior","borderColor","type","onClick","handelClick","selectedParams","setTitleImage","src","UlChairsPhoto","photos","title","heightAllDiv","setHeightAllDiv","useState","allDivRef","ulRef","allDiv","gap","setTimeout","map","DivImages","DivListImages","IconButton","_templateObject4","props","size","color","DivBigImg","_templateObject5","BigImg","_templateObject6","DivText","_templateObject7","TitleChair","_templateObject8","Price","_templateObject9","OldPrice","_templateObject10","PlainText","_templateObject11","DivDescription","_templateObject12","TitleDescription","_templateObject13","DivOptions","_templateObject14","DivQuantityShopButton","_templateObject15","ShopButton","_templateObject16","TitleColors","UlColorsChair","selectColorChair","idButton","currentTarget","setColor","_jsxs","backgroundColor","TitleSizes","LiSizesChair","selectedSize","selectSizeChair","valueBntton","textContent","setSelectedSize","UlSizesChair","sizes","index","QuantityInput","quantity","setQuantity","inputSavDrRef","plusButRef","minButRef","inputSavDr","plusBut","minBut","fontSize","right","left","css","forMin","newValM","Number","name","onInput","value","replace","onChange","evt","preventDefault","inpValue","forPlus","newValP","ChairCard","useParams","chair","selectItems","find","item","divImagesRef","divBigImgRef","divTextRef","titleChairRef","priceRef","titleDescriptionRef","divOptionsRef","shopButtonRef","divImages","divBigImg","divText","titleChair","price","titleDescription","divOptions","shopButton","marginTop","marginBottom","_Fragment","href","sprite","images","toLowerCase","newPrice","smollDescription","dataForOrder","setOrderItems","description","p"],"sourceRoot":""}